{"version":3,"sources":["components/Card.js","components/Header.js","components/UserInput.js","api.js","components/UserEnter.js","components/Timer.js","components/User.js","components/LeaderBoard.js","App.js","index.js"],"names":["Card","props","clickNext","pokemon","onCorrectPokemon","btn","useRef","useEffect","current","focus","className","src","sprites","front_default","alt","style","filter","onClick","onKeyUp","event","key","ref","Header","score","UserInput","tryGuess","useState","search","setSearch","color","setColor","placeholder","onChange","e","target","value","autoFocus","getPokemon","number","a","url","fetch","response","json","UserEnter","userName","setUserName","enteredName","length","alert","evt","Timer","gameOver","startTimer","seconds","setSeconds","intervalState","setIntervalState","clock","clearInterval","setInterval","User","name","isCurrent","rank","LeaderBoard","users","setUsers","currentID","setCurrentID","setRank","getUsers","fetchUsers","usersFromServer","id","findRank","addUser","user","method","headers","body","JSON","stringify","res","data","newUsers","sort","b","map","index","findIndex","fontSize","App","currentPokemon","setCurrentPokemon","setScore","setOnCorrectPokemon","used","setUsed","setGameOver","gameStarted","setGameStarted","getRandomPokemon","getRandomNum","i","push","Math","random","fillUsed","rand","pop","randNum","nameGuess","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8581f66b.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const { clickNext, pokemon, onCorrectPokemon } = props;\r\n\r\n  const btn = useRef(null);\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      clickNext();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!pokemon || onCorrectPokemon) {\r\n      btn.current.focus();\r\n    }\r\n  }, [pokemon, onCorrectPokemon]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {pokemon ? (\r\n          <img\r\n            className=\"pokeImg\"\r\n            src={pokemon.sprites.front_default}\r\n            alt=\"\"\r\n            style={{ filter: onCorrectPokemon ? \"\" : \"brightness(0)\" }}\r\n          />\r\n        ) : (\r\n          <img\r\n            className=\"loadingPokeImg\"\r\n            src=\"https://i.pinimg.com/originals/95/d5/cd/95d5cded00f3a3e8a98fb1eed568aa9f.png\"\r\n            alt=\"\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"nextButton\"\r\n          onClick={clickNext}\r\n          onKeyUp={handleKeyDown}\r\n          ref={btn}\r\n        >\r\n          {pokemon ? (onCorrectPokemon ? \"Next!\" : \"Skip\") : \"Start!\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  const { score } = props;\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        className=\"headerImg\"\r\n        src=\"https://www.freepnglogos.com/uploads/black-pokemon-logo-transparent-27.png\"\r\n      />\r\n      <div className=\"headerScore\">Score: {score}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nconst UserInput = (props) => {\r\n  const { tryGuess } = props;\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [color,setColor]=useState(\"black\");\r\n\r\n\r\n  const onChange = (e) => {\r\n    setSearch(e.target.value);\r\n    setColor(\"black\");\r\n  };\r\n\r\n  const onClick = () => {\r\n    tryGuess(search);\r\n    setColor(\"red\");\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      tryGuess(search);\r\n      setColor(\"red\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          className=\"guessInput\"\r\n          placeholder=\"Enter Pokemon name...\"\r\n          onChange={onChange}\r\n          onKeyUp={handleKeyDown}\r\n          autoFocus\r\n          style={{color: color}}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className=\"guessButton\" onClick={onClick}>\r\n          Guess!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInput;\r\n","export const getPokemon = async (number) => {\r\n  try {\r\n    let url = `https://pokeapi.co/api/v2/pokemon/${number}`;\r\n    const response = await fetch(url);\r\n    const pokemon = await response.json();\r\n    return pokemon;\r\n  } catch (err) {}\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nconst UserEnter = (props) => {\r\n  const { onClick } = props;\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const welcomeText = `Who's that Pokemon Quiz`;\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      enteredName();\r\n    }\r\n  };\r\n\r\n  const onChange = (evt) => {\r\n    setUserName(evt.target.value);\r\n  };\r\n\r\n  const enteredName = () => {\r\n    if (userName.length > 2 && userName.length < 16) {\r\n      onClick(userName);\r\n    } else {\r\n      alert(\"Name must be 3-15 characters\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"userEnter\">\r\n      <div>\r\n        <img\r\n          className=\"headerEnterImg\"\r\n          src=\"https://www.freepnglogos.com/uploads/black-pokemon-logo-transparent-27.png\"\r\n        />\r\n        <img\r\n          className=\"enterPokemonImg\"\r\n          src=\"https://i.pinimg.com/originals/95/d5/cd/95d5cded00f3a3e8a98fb1eed568aa9f.png\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"introText\">{welcomeText}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          className=\"userEnterInput\"\r\n          placeholder=\"Enter your name to begin...\"\r\n          onChange={onChange}\r\n          onKeyUp={handleKeyDown}\r\n          autoFocus\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className=\"userEnterButton\" onClick={enteredName}>\r\n          Start!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserEnter;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Timer = (props) => {\r\n  const { gameOver, startTimer } = props;\r\n\r\n\r\n  const [seconds, setSeconds] = useState(60);\r\n  const [intervalState, setIntervalState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (startTimer) {\r\n      clock();\r\n    }\r\n  }, [startTimer]);\r\n\r\n  useEffect(() => {\r\n    if (seconds === -1) {\r\n      clearInterval(intervalState);\r\n      gameOver();\r\n    }\r\n  }, [seconds, gameOver, intervalState]);\r\n\r\n  const clock = () => {\r\n    setIntervalState(\r\n      setInterval(() => {\r\n        setSeconds((seconds) => seconds - 1);\r\n      }, 1000)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"timer\"\r\n        style={{ color: seconds < 10 ? \"orangered\" : \"white\" }}\r\n      >\r\n        {seconds}s\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\n\r\nconst User = (props) => {\r\n  const { name, score, isCurrent, rank} = props;\r\n\r\n  return (\r\n    <div className=\"user\" style={{ color: (score===\"Score\") ? \"yellow\" : (isCurrent ? \"lime\" : \"white\")}}>\r\n      <div className=\"userRank\">{rank}</div>\r\n      <div className=\"userName\">{name}</div>\r\n      <div className=\"userScore\">{score}</div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport User from \"../components/User\";\r\n\r\nconst LeaderBoard = (props) => {\r\n  const { name, score } = props;\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const [currentID, setCurrentID]=useState(0);\r\n\r\n  const [rank,setRank]=useState(0);\r\n\r\n  let url = \"http://localhost:4000/users\";\r\n\r\n  const getUsers = async () => {\r\n    const usersFromServer = await fetchUsers();\r\n    setCurrentID(usersFromServer[usersFromServer.length-1].id); \r\n    setUsers(usersFromServer);    \r\n  };\r\n\r\n  useEffect(()=>{\r\n    findRank()\r\n  },[users]);\r\n\r\n  useEffect(() => {\r\n    addUser();\r\n  }, []);\r\n\r\n  const addUser = async () => {\r\n    const user = {name, score};\r\n    const res = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(user)\r\n    }); \r\n    await getUsers();\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    const res = await fetch(url);\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  const newUsers = users\r\n  .sort((a,b) => b.score - a.score)\r\n  .map((user, index) => {\r\n     return <User key={index} name={user.name} score={user.score} isCurrent={(user.id===currentID)} rank={index+1}/>\r\n  });\r\n\r\n  const findRank=()=>{\r\n    const index=users.findIndex(user=>user.id===currentID);\r\n    setRank(index+1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"Result\">\r\n        <div>Well done {name}, you caught {score} Pokemon!</div>\r\n        <div style={{fontSize:\"25px\"}}>You got {rank}{(rank%10===1) ? \"st\":(rank%10===2)?\"nd\":(rank%10===3)?\"rd\":\"th\"} of {users.length} total trainers</div>\r\n      </div>\r\n      <div style={{color:\"yellow\",fontSize:\"50px\"}}>HIGH SCORES</div>\r\n      <div className=\"LeaderBoard\">\r\n        <User name=\"Name\" score=\"Score\" isCurrent={false} rank=\"Rank\"/>\r\n        {newUsers}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderBoard;\r\n","import { useState } from \"react\";\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport UserInput from \"./components/UserInput\";\nimport { getPokemon } from \"./api\";\nimport \"./styles.css\";\nimport UserEnter from \"./components/UserEnter\";\nimport Timer from \"./components/Timer\";\nimport LeaderBoard from \"./components/LeaderBoard\";\n\nexport default function App() {\n  const [currentPokemon, setCurrentPokemon] = useState(null);\n  const [score, setScore] = useState(0);\n  const [onCorrectPokemon, setOnCorrectPokemon] = useState(false);\n  const [used, setUsed] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  \n  const max = 151;\n\n  const enteredUserName = (name) => {\n    setUserName(name);\n  };\n\n  const clickNext = async () => {\n    await getRandomPokemon();\n    setGameStarted(true);\n    setOnCorrectPokemon(false);\n  };\n\n  const fillUsed = () => {\n    for (var i = 1; i <= max; i++) {\n      used.push(i);\n    }\n    used.sort(() => Math.random() - 0.5);\n    setUsed(used);\n  };\n\n  const getRandomNum = () => {\n    if (used.length === 0) {\n      fillUsed();\n    }\n    const rand = used.pop();\n    setUsed(used);\n    return rand;\n  };\n\n  const getRandomPokemon = async () => {\n    const randNum = getRandomNum(max, used);\n    const pokemon = await getPokemon(randNum);\n    setCurrentPokemon(pokemon);\n  };\n\n  const tryGuess = (nameGuess) => {\n    if (currentPokemon.name === nameGuess) {\n      setScore(score + 1);\n      setOnCorrectPokemon(true);\n    } else {\n      //wrong\n    }\n  };\n\n  const changeGameState = () => {\n    setGameOver(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {!gameOver ? (\n        <div>\n          {userName ? (\n            <div>\n              <div className=\"Header\">\n                <Header score={score} />\n              </div>\n              <div>\n                <Timer startTimer={gameStarted} gameOver={changeGameState} />\n              </div>\n              <div className=\"Card\">\n                <Card\n                  clickNext={clickNext}\n                  pokemon={currentPokemon}\n                  onCorrectPokemon={onCorrectPokemon}\n                />\n              </div>\n              {!onCorrectPokemon && currentPokemon ? (\n                <div className=\"UserInput\">\n                  <UserInput tryGuess={tryGuess}/>\n                </div>\n              ) : (\n                <div className=\"bottomStatusText\">\n                  {onCorrectPokemon ? \"Perfect!\" : \"Ready?\"}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div>\n              <UserEnter onClick={enteredUserName} />\n            </div>\n          )}\n        </div>\n      ) : (\n        <div>\n          <LeaderBoard name={userName} score={score} />\n        </div>\n      )}\n      <footer className=\"copyRight\">Copyright &copy; Jose Yamin 2021</footer>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}